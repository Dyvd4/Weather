[{"C:\\Users\\David\\Documents\\GitHub\\React\\Weather\\App\\src\\index.js":"1","C:\\Users\\David\\Documents\\GitHub\\React\\Weather\\App\\src\\reportWebVitals.js":"2","C:\\Users\\David\\Documents\\GitHub\\React\\Weather\\App\\src\\Components\\Wrapper.jsx":"3","C:\\Users\\David\\Documents\\GitHub\\React\\Weather\\App\\src\\Components\\Details.jsx":"4","C:\\Users\\David\\Documents\\GitHub\\React\\Weather\\App\\src\\Components\\Preview.jsx":"5"},{"size":302,"mtime":1613758141035,"results":"6","hashOfConfig":"7"},{"size":375,"mtime":1613758141037,"results":"8","hashOfConfig":"7"},{"size":2045,"mtime":1613902952570,"results":"9","hashOfConfig":"7"},{"size":2223,"mtime":1613902759819,"results":"10","hashOfConfig":"7"},{"size":1862,"mtime":1613758141026,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"7oeuj6",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"C:\\Users\\David\\Documents\\GitHub\\React\\Weather\\App\\src\\index.js",[],["25","26"],"C:\\Users\\David\\Documents\\GitHub\\React\\Weather\\App\\src\\reportWebVitals.js",[],"C:\\Users\\David\\Documents\\GitHub\\React\\Weather\\App\\src\\Components\\Wrapper.jsx",["27","28","29","30","31","32"],"import React, { Component } from \"react\";\r\nimport \"../bootstrap.css\";\r\nimport \"../index.css\";\r\nimport Details from \"./Details\";\r\nimport Preview from \"./Preview\";\r\nclass Wrapper extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  componentDidMount() {\r\n    this.getCoords();\r\n    setInterval(this.getWeatherData, 500);\r\n    setInterval(this.getGeolocation,500);\r\n  }\r\n  state = {\r\n    data: {},\r\n    gotCoords: false,\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container center\">\r\n        <Details data={this.state.data}></Details>\r\n        <Preview data={this.state.data}></Preview>\r\n      </div>\r\n    );\r\n  }\r\n  getCoords = () => {\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      var { latitude, longitude } = position.coords;\r\n\r\n      this.state.data.location = {\r\n        latitude,\r\n        longitude,\r\n      };\r\n      this.setState({ gotCoords: true });\r\n    });\r\n  };\r\n  getGeolocation = async () => {\r\n    if(this.state.gotCoords == true){\r\n      const key = process.env.REACT_APP_GoogleApiKey;\r\n      var lat = this.state.data.location.latitude;\r\n      var lon = this.state.data.location.longitude;\r\n      const response = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${lon}&key=${key}`);\r\n      const data =await response.json();\r\n\r\n      this.setState({gotCoords:false});\r\n      clearInterval(this.getGeolocation);\r\n    }\r\n   \r\n  }\r\n  getWeatherData = async () => {\r\n    if (this.state.gotCoords == true) {\r\n      var lat = this.state.data.location.latitude;\r\n      var lon = this.state.data.location.longitude;\r\n      const key = process.env.REACT_APP_WeatherApiKey;\r\n      const response = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&units=metric&lang=de&appid=${key}`);\r\n      const data = await response.json();\r\n\r\n      this.state.data.weather = {\r\n        data,\r\n      };\r\n\r\n      this.setState({ gotCoords: false });\r\n      clearInterval(this.getWeatherData);\r\n    }\r\n  };\r\n}\r\n\r\nexport default Wrapper;\r\n","C:\\Users\\David\\Documents\\GitHub\\React\\Weather\\App\\src\\Components\\Details.jsx",["33"],"import React, { Component } from \"react\";\r\nimport \"../bootstrap.css\";\r\nimport \"../index.css\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport \"../Details.css\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faCloudSun, faCloud } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nlibrary.add(faCloud, faCloudSun);\r\n\r\nclass Details extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n//  const weatherData= this.props.weather.data;\r\n // const locationData = this.props.location;\r\n    return (\r\n      <div className=\"details-wrapper\">\r\n        <div>\r\n          <div style={{ display: \"inline\", float: \"left\" }}>\r\n            <div className=\"info-group-1\">\r\n              <div className=\"info-group-item\" id=\"main\">\r\n                <FontAwesomeIcon\r\n                  style={{ margin: \"0 0.25em\" }}\r\n                  icon=\"cloud\"\r\n                  size=\"sm\"\r\n                />\r\n                <span id=\"currentTemperature\">  </span>\r\n              </div>\r\n\r\n              <div className=\"info-group-item\" id=\"config\">\r\n                <span className=\"temperatureConfig-item\">°C</span>\r\n                <span className=\"temperatureConfig-item\">|</span>\r\n                <span className=\"temperatureConfig-item\">°F</span>\r\n              </div>\r\n\r\n              <div className=\"info-group-item\" id=\"secondary\">\r\n                <span className=\"text-secondary\">Niederschlag: 0%</span>\r\n                <span className=\"text-secondary\">Luftfeuchte: 62%</span>\r\n                <span className=\"text-secondary\">Wind: 30 km/h</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div style={{ display: \"inline\", float: \"right\" }}>\r\n            <div className=\"info-group-2\" id=\"third\">\r\n              <h3>Backnang</h3>\r\n              <h5 className=\"text-secondary\">Donnerstag</h5>\r\n              <h5 className=\"text-secondary\"></h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <Line\r\n            width={100}\r\n            height={100}\r\n            options={{ maintainAspectRatio: false }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Details;\r\n","C:\\Users\\David\\Documents\\GitHub\\React\\Weather\\App\\src\\Components\\Preview.jsx",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":7,"column":3,"nodeType":"40","messageId":"41","endLine":9,"endColumn":4},{"ruleId":"42","severity":1,"message":"43","line":31,"column":7,"nodeType":"44","endLine":31,"endColumn":22},{"ruleId":"45","severity":1,"message":"46","line":39,"column":29,"nodeType":"47","messageId":"48","endLine":39,"endColumn":31},{"ruleId":"49","severity":1,"message":"50","line":44,"column":13,"nodeType":"51","messageId":"52","endLine":44,"endColumn":17},{"ruleId":"45","severity":1,"message":"46","line":52,"column":30,"nodeType":"47","messageId":"48","endLine":52,"endColumn":32},{"ruleId":"42","severity":1,"message":"43","line":59,"column":7,"nodeType":"44","endLine":59,"endColumn":22},{"ruleId":"53","severity":1,"message":"54","line":49,"column":15,"nodeType":"55","endLine":49,"endColumn":46},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]