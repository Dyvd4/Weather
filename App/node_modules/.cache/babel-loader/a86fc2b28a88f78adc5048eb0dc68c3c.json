{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Documents\\\\GitHub\\\\React\\\\Weather\\\\App\\\\src\\\\Components\\\\Details.jsx\";\nimport React, { Component } from \"react\";\nimport \"../bootstrap.css\";\nimport \"../index.css\";\nimport { Line } from \"react-chartjs-2\";\nimport \"../Details.css\";\nimport moment from 'moment';\nimport 'moment/locale/de';\nimport WeatherIcon from './WeatherIcon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Details extends Component {\n  getLineChartData(hourlyData, currentDate) {\n    let filteredData = [];\n    let counter = 0;\n    let currentHourlyDate;\n\n    for (let i = 0; i < hourlyData.length; i++) {\n      currentHourlyDate = moment.unix(hourlyData[i].dt).format(\"DD:MM:YYYY\");\n\n      if (counter === 3) {\n        counter = 0;\n      }\n\n      if (counter === 0 && currentHourlyDate === currentDate) {\n        filteredData.push(hourlyData[i]);\n      }\n\n      counter++;\n    }\n\n    return {\n      datasets: [{\n        data: filteredData.map(entity => {\n          return Math.round(entity.temp);\n        }),\n        backgroundColor: 'rgba(255, 204, 0, 0.2)',\n        borderColor: '#ffbb00',\n        pointStyle: 'circle',\n        pointBackgroundColor: '#ffbb00'\n      }],\n      labels: filteredData.map(entity => {\n        return moment.unix(entity.dt).format(\"HH:mm\");\n      })\n    };\n  }\n\n  getLineChartOptions() {\n    return {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      scales: {\n        xAxes: [{\n          gridLines: {\n            color: '#ffffff'\n          }\n        }]\n      },\n      tooltips: {\n        bodyAlign: 'center',\n        custom: tooltipItem => {\n          tooltipItem.displayColors = false;\n        },\n        callbacks: {\n          title: () => {\n            return;\n          }\n        }\n      }\n    };\n  }\n\n  render() {\n    const {\n      current,\n      hourly\n    } = this.props.data.weather.data;\n    let currentDate = moment.unix(current.dt).format(\"DD:MM:YYYY\");\n    let chartData = this.getLineChartData(hourly);\n    let chartOptions = this.getLineChartOptions();\n    moment.locale('de');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"inline\",\n            float: \"left\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-group-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-group-item\",\n              id: \"main\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  margin: \"0 0.25em 0 0\"\n                },\n                children: /*#__PURE__*/_jsxDEV(WeatherIcon, {\n                  status: current.weather[0].main,\n                  size: \"lg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"currentTemperature\",\n                children: Math.round(current.temp)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-group-item\",\n              id: \"config\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"temperatureConfig-item\",\n                children: \"\\xB0C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"temperatureConfig-item\",\n                children: \"|\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"temperatureConfig-item\",\n                children: \"\\xB0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-group-item\",\n              id: \"secondary\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-secondary\",\n                children: [\"Niederschlag: \", current.clouds, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-secondary\",\n                children: [\"Luftfeuchte: \", current.humidity, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-secondary\",\n                children: [\"Wind: \", current.wind_speed, \" km/h\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"inline\",\n            float: \"right\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-group-2\",\n            id: \"third\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Backnang\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"text-secondary\",\n              children: moment(currentDate).format(\"HH:mm dddd\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"text-secondary\",\n              children: current.weather[0].description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          options: chartOptions,\n          data: chartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Details;","map":{"version":3,"sources":["C:/Users/David/Documents/GitHub/React/Weather/App/src/Components/Details.jsx"],"names":["React","Component","Line","moment","WeatherIcon","Details","getLineChartData","hourlyData","currentDate","filteredData","counter","currentHourlyDate","i","length","unix","dt","format","push","datasets","data","map","entity","Math","round","temp","backgroundColor","borderColor","pointStyle","pointBackgroundColor","labels","getLineChartOptions","maintainAspectRatio","legend","display","scales","xAxes","gridLines","color","tooltips","bodyAlign","custom","tooltipItem","displayColors","callbacks","title","render","current","hourly","props","weather","chartData","chartOptions","locale","float","margin","main","clouds","humidity","wind_speed","description"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../bootstrap.css\";\r\nimport \"../index.css\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport \"../Details.css\";\r\nimport moment from 'moment';\r\nimport 'moment/locale/de';\r\nimport WeatherIcon from './WeatherIcon';\r\nclass Details extends Component {\r\n \r\n  getLineChartData(hourlyData, currentDate) {\r\n    let filteredData = [];\r\n    let counter = 0;\r\n    let currentHourlyDate;\r\n    for (let i = 0; i < hourlyData.length; i++) {\r\n      currentHourlyDate = moment.unix(hourlyData[i].dt).format(\"DD:MM:YYYY\");\r\n      if (counter === 3) {\r\n        counter = 0;\r\n      }\r\n      if (counter === 0 && currentHourlyDate === currentDate) {\r\n        filteredData.push(hourlyData[i]);\r\n      }\r\n      counter++;\r\n    }\r\n    return {\r\n      datasets: [{\r\n        data: filteredData.map(entity => { return Math.round(entity.temp) }),\r\n        backgroundColor: 'rgba(255, 204, 0, 0.2)',\r\n        borderColor: '#ffbb00',\r\n        pointStyle: 'circle',\r\n        pointBackgroundColor: '#ffbb00'\r\n      }],\r\n      labels: filteredData.map(entity => { return moment.unix(entity.dt).format(\"HH:mm\") }),\r\n    }\r\n  }\r\n  getLineChartOptions() {\r\n    return {\r\n      maintainAspectRatio: false,\r\n      legend: {\r\n        display: false\r\n      },\r\n      scales: {\r\n        xAxes: [{\r\n          gridLines: {\r\n            color: '#ffffff'\r\n          }\r\n        }]\r\n      },\r\n\r\n      tooltips: {\r\n        bodyAlign: 'center',\r\n        custom: tooltipItem => {\r\n          tooltipItem.displayColors = false;\r\n        },\r\n        callbacks: {\r\n          title: () => { return }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    const { current, hourly } = this.props.data.weather.data;\r\n    let currentDate = moment.unix(current.dt).format(\"DD:MM:YYYY\");\r\n    let chartData = this.getLineChartData(hourly);\r\n    let chartOptions = this.getLineChartOptions();\r\n    moment.locale('de');\r\n    return (\r\n      <div className=\"details-wrapper\">\r\n        <div>\r\n          <div style={{ display: \"inline\", float: \"left\" }}>\r\n            <div className=\"info-group-1\">\r\n              <div className=\"info-group-item\" id=\"main\">\r\n                <div style={{ margin: \"0 0.25em 0 0\" }}>\r\n                  <WeatherIcon\r\n                    status={current.weather[0].main}\r\n                    size=\"lg\"\r\n                  />\r\n                </div>\r\n                <span id=\"currentTemperature\">{Math.round(current.temp)}</span>\r\n              </div>\r\n\r\n              <div className=\"info-group-item\" id=\"config\">\r\n                <span className=\"temperatureConfig-item\">°C</span>\r\n                <span className=\"temperatureConfig-item\">|</span>\r\n                <span className=\"temperatureConfig-item\">°F</span>\r\n              </div>\r\n\r\n              <div className=\"info-group-item\" id=\"secondary\">\r\n                <span className=\"text-secondary\">Niederschlag: {current.clouds}%</span>\r\n                <span className=\"text-secondary\">Luftfeuchte: {current.humidity}%</span>\r\n                <span className=\"text-secondary\">Wind: {current.wind_speed} km/h</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div style={{ display: \"inline\", float: \"right\" }}>\r\n            <div className=\"info-group-2\" id=\"third\">\r\n              <h3>Backnang</h3>\r\n              <h5 className=\"text-secondary\">{moment(currentDate).format(\"HH:mm dddd\")}</h5>\r\n              <h5 className=\"text-secondary\">{current.weather[0].description}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <Line\r\n            options={chartOptions}\r\n            data={chartData}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Details;\r\n"]},"metadata":{},"sourceType":"module"}