{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Documents\\\\GitHub\\\\React\\\\Weather\\\\App\\\\src\\\\Components\\\\Details.jsx\";\nimport React, { Component } from \"react\";\nimport \"../bootstrap.css\";\nimport \"../index.css\";\nimport { Line } from \"react-chartjs-2\";\nimport \"../Details.css\";\nimport moment from 'moment';\nimport 'moment/locale/de';\nimport WeatherIcon from './WeatherIcon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Details extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      componentHasUpdated: false,\n      chartData: {}\n    };\n  }\n\n  getLineChartData(hourlyData) {\n    let filteredData = [];\n    let counter = 0;\n\n    for (let i = 0; i < hourlyData.length - 24; i++) {\n      if (counter === 3) {\n        counter = 0;\n      }\n\n      if (counter === 0) {\n        filteredData.push(hourlyData[i]);\n      }\n\n      counter++;\n    }\n\n    return {\n      datasets: [{\n        data: filteredData.map(entity => {\n          return Math.round(entity.temp);\n        }),\n        backgroundColor: 'rgba(255, 204, 0, 0.2)',\n        borderColor: '#ffbb00',\n        pointStyle: 'line'\n      }],\n      labels: filteredData.map(entity => {\n        return moment.unix(entity.dt).format(\"HH:mm\");\n      })\n    };\n  }\n\n  getLineChartOptions() {\n    return {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      scales: {\n        yAxes: [{\n          display: false\n        }]\n      },\n      tooltips: {\n        bodyAlign: 'center',\n        custom: tooltipItem => {\n          tooltipItem.displayColors = false;\n        },\n        callbacks: {\n          title: () => {\n            return;\n          }\n        }\n      }\n    };\n  }\n\n  render() {\n    if (this.props.data !== undefined) {\n      if (this.props.data.weather !== undefined) {\n        const {\n          current\n        } = this.props.data.weather.data;\n        const {\n          hourly\n        } = this.props.data.weather.data;\n        let chartData = this.getLineChartData(hourly);\n        let chartOptions = this.getLineChartOptions();\n        moment.locale('de');\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"inline\",\n                float: \"left\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"info-group-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"info-group-item\",\n                  id: \"main\",\n                  children: [/*#__PURE__*/_jsxDEV(WeatherIcon, {\n                    style: {\n                      margin: \"0 0.25em\"\n                    },\n                    status: current.weather[0].main,\n                    size: \"sm\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    id: \"currentTemperature\",\n                    children: Math.round(current.temp)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"info-group-item\",\n                  id: \"config\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"temperatureConfig-item\",\n                    children: \"\\xB0C\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"temperatureConfig-item\",\n                    children: \"|\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"temperatureConfig-item\",\n                    children: \"\\xB0F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"info-group-item\",\n                  id: \"secondary\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-secondary\",\n                    children: [\"Niederschlag: \", current.clouds, \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-secondary\",\n                    children: [\"Luftfeuchte: \", current.humidity, \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-secondary\",\n                    children: [\"Wind: \", current.wind_speed, \" km/h\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"inline\",\n                float: \"right\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"info-group-2\",\n                id: \"third\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Backnang\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"text-secondary\",\n                  children: moment().format(\"dddd HH:mm\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"text-secondary\",\n                  children: current.weather[0].description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Line, {\n              width: 100,\n              height: 100,\n              options: chartOptions,\n              data: chartData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Waiting for data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Waiting for data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport default Details;","map":{"version":3,"sources":["C:/Users/David/Documents/GitHub/React/Weather/App/src/Components/Details.jsx"],"names":["React","Component","Line","moment","WeatherIcon","Details","state","componentHasUpdated","chartData","getLineChartData","hourlyData","filteredData","counter","i","length","push","datasets","data","map","entity","Math","round","temp","backgroundColor","borderColor","pointStyle","labels","unix","dt","format","getLineChartOptions","maintainAspectRatio","legend","display","scales","yAxes","tooltips","bodyAlign","custom","tooltipItem","displayColors","callbacks","title","render","props","undefined","weather","current","hourly","chartOptions","locale","float","margin","main","clouds","humidity","wind_speed","description"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../bootstrap.css\";\r\nimport \"../index.css\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport \"../Details.css\";\r\nimport moment from 'moment';\r\nimport 'moment/locale/de';\r\nimport WeatherIcon from './WeatherIcon';\r\nclass Details extends Component {\r\n  state = {\r\n    componentHasUpdated: false,\r\n    chartData: {}\r\n  };\r\n  getLineChartData(hourlyData) {\r\n    let filteredData = [];\r\n    let counter = 0;\r\n    for (let i = 0; i < hourlyData.length - 24; i++) {\r\n      if (counter === 3) {\r\n        counter = 0;\r\n      }\r\n      if (counter === 0) {\r\n        filteredData.push(hourlyData[i]);\r\n      }\r\n      counter++;\r\n    }\r\n    return {\r\n      datasets: [{\r\n        data: filteredData.map(entity => { return Math.round(entity.temp) }),\r\n        backgroundColor: 'rgba(255, 204, 0, 0.2)',\r\n        borderColor: '#ffbb00',\r\n        pointStyle: 'line',\r\n      }],\r\n      labels: filteredData.map(entity => { return moment.unix(entity.dt).format(\"HH:mm\") }),\r\n    }\r\n  }\r\n  getLineChartOptions() {\r\n    return {\r\n      maintainAspectRatio: false,\r\n      legend: {\r\n        display: false\r\n      },\r\n      scales:{\r\n        yAxes:[{display:false}]\r\n      },\r\n      tooltips: {\r\n        bodyAlign:'center',\r\n        custom: tooltipItem =>{\r\n          tooltipItem.displayColors = false;\r\n        },\r\n        callbacks:{\r\n          title:()=>{return}\r\n        }\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    if (this.props.data !== undefined) {\r\n      if (this.props.data.weather !== undefined) {\r\n        const { current } = this.props.data.weather.data;\r\n        const { hourly } = this.props.data.weather.data;\r\n        let chartData = this.getLineChartData(hourly);\r\n        let chartOptions = this.getLineChartOptions();\r\n        moment.locale('de');\r\n      \r\n        return (\r\n          <div className=\"details-wrapper\">\r\n            <div>\r\n              <div style={{ display: \"inline\", float: \"left\" }}>\r\n                <div className=\"info-group-1\">\r\n                  <div className=\"info-group-item\" id=\"main\">\r\n                    <WeatherIcon\r\n                      style={{ margin: \"0 0.25em\" }}\r\n                      status={current.weather[0].main}\r\n                      size=\"sm\"\r\n                    />\r\n                    <span id=\"currentTemperature\">{Math.round(current.temp)}</span>\r\n                  </div>\r\n\r\n                  <div className=\"info-group-item\" id=\"config\">\r\n                    <span className=\"temperatureConfig-item\">°C</span>\r\n                    <span className=\"temperatureConfig-item\">|</span>\r\n                    <span className=\"temperatureConfig-item\">°F</span>\r\n                  </div>\r\n\r\n                  <div className=\"info-group-item\" id=\"secondary\">\r\n                    <span className=\"text-secondary\">Niederschlag: {current.clouds}%</span>\r\n                    <span className=\"text-secondary\">Luftfeuchte: {current.humidity}%</span>\r\n                    <span className=\"text-secondary\">Wind: {current.wind_speed} km/h</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div style={{ display: \"inline\", float: \"right\" }}>\r\n                <div className=\"info-group-2\" id=\"third\">\r\n                  <h3>Backnang</h3>\r\n                  <h5 className=\"text-secondary\">{moment().format(\"dddd HH:mm\")}</h5>\r\n                  <h5 className=\"text-secondary\">{current.weather[0].description}</h5>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <Line\r\n                width={100}\r\n                height={100}\r\n                options={chartOptions}\r\n                data={chartData}\r\n              />\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      else {\r\n        return (\r\n          <div>Waiting for data</div>\r\n        );\r\n      }\r\n    }\r\n    else {\r\n      return (\r\n        <div>Waiting for data</div>\r\n      );\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default Details;\r\n"]},"metadata":{},"sourceType":"module"}