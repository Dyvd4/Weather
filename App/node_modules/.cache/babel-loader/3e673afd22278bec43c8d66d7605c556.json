{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Documents\\\\GitHub\\\\React\\\\Weather\\\\App\\\\src\\\\Components\\\\Preview.jsx\";\nimport React, { Component } from \"react\";\nimport \"../bootstrap.css\";\nimport WeatherIcon from './WeatherIcon';\nimport \"../Preview.css\";\nimport moment from 'moment';\nimport 'moment/locale/de';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Preview extends Component {\n  constructor(props) {}\n\n  componentDidMount() {\n    if (this.props.data !== undefined) {\n      if (this.props.data.weather !== undefined) {\n        const {\n          daily,\n          hourly\n        } = this.props.data.weather.data;\n        this.setState({\n          daily: daily,\n          hourly: hourly\n        });\n      }\n    }\n  }\n\n  render() {\n    if (this.state.gotData) {\n      moment.locale(\"de\");\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: daily.forEach(forecast => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preview-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"day-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"day-card-group-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-secondary\",\n                    children: moment.unix(forecast.dt).format(\"dddd.\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 38,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(WeatherIcon, {\n                    status: forecast.weather[0].main,\n                    size: \"lg\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 39,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"day-card-group-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [forecast.temp.max, \"\\xB0\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 45,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-secondary\",\n                    children: [forecast.temp.min, \"\\xB0\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 46,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Waiting..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }, this);\n    }\n  }\n\n}\n\nexport default Preview;","map":{"version":3,"sources":["C:/Users/David/Documents/GitHub/React/Weather/App/src/Components/Preview.jsx"],"names":["React","Component","WeatherIcon","moment","Preview","constructor","props","componentDidMount","data","undefined","weather","daily","hourly","setState","render","state","gotData","locale","forEach","forecast","unix","dt","format","main","temp","max","min"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,kBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,gBAAP;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,kBAAP;;;AACA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAC9BI,EAAAA,WAAW,CAACC,KAAD,EAAO,CAEjB;;AAMDC,EAAAA,iBAAiB,GAAE;AACjB,QAAG,KAAKD,KAAL,CAAWE,IAAX,KAAoBC,SAAvB,EAAiC;AAC/B,UAAI,KAAKH,KAAL,CAAWE,IAAX,CAAgBE,OAAhB,KAA4BD,SAAhC,EAA2C;AACzC,cAAM;AAACE,UAAAA,KAAD;AAAQC,UAAAA;AAAR,YAAkB,KAAKN,KAAL,CAAWE,IAAX,CAAgBE,OAAhB,CAAwBF,IAAhD;AACA,aAAKK,QAAL,CAAc;AACZF,UAAAA,KAAK,EAAEA,KADK;AAEZC,UAAAA,MAAM,EAAEA;AAFI,SAAd;AAID;AACF;AACF;;AACDE,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKC,KAAL,CAAWC,OAAf,EAAwB;AACpBb,MAAAA,MAAM,CAACc,MAAP,CAAc,IAAd;AACA,0BACE;AAAA,kBACGN,KAAK,CAACO,OAAN,CAAcC,QAAQ,IAAI;AACzB,8BACE;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,iBAAf;AAAA,qCACE;AAAK,gBAAA,SAAS,EAAC,UAAf;AAAA,wCACE;AAAK,kBAAA,SAAS,EAAC,kBAAf;AAAA,0CACE;AAAK,oBAAA,SAAS,EAAC,gBAAf;AAAA,8BAAiChB,MAAM,CAACiB,IAAP,CAAYD,QAAQ,CAACE,EAArB,EAAyBC,MAAzB,CAAgC,OAAhC;AAAjC;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,QAAC,WAAD;AACE,oBAAA,MAAM,EAAEH,QAAQ,CAACT,OAAT,CAAiB,CAAjB,EAAoBa,IAD9B;AAEE,oBAAA,IAAI,EAAC;AAFP;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAQE;AAAK,kBAAA,SAAS,EAAC,kBAAf;AAAA,0CACE;AAAA,+BAAOJ,QAAQ,CAACK,IAAT,CAAcC,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAM,oBAAA,SAAS,EAAC,gBAAhB;AAAA,+BAAkCN,QAAQ,CAACK,IAAT,CAAcE,GAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,wBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF;AAmBD,SApBA;AADH;AAAA;AAAA;AAAA;AAAA,cADF;AAyBH,KA3BD,MA4BK;AACH,0BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AACD;AACF;;AApD6B;;AAuDhC,eAAetB,OAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../bootstrap.css\";\r\nimport WeatherIcon from './WeatherIcon';\r\nimport \"../Preview.css\";\r\nimport moment from 'moment';\r\nimport 'moment/locale/de';\r\nclass Preview extends Component {\r\n  constructor(props){\r\n    \r\n  }\r\n  state = {\r\n    daily:{},\r\n    hourly:{},\r\n    gotData:false\r\n  };\r\n  componentDidMount(){\r\n    if(this.props.data !== undefined){\r\n      if (this.props.data.weather !== undefined) {\r\n        const {daily, hourly} = this.props.data.weather.data;\r\n        this.setState({\r\n          daily: daily,\r\n          hourly: hourly\r\n        })\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    if (this.state.gotData) {\r\n        moment.locale(\"de\");\r\n        return (\r\n          <ul>\r\n            {daily.forEach(forecast => {\r\n              return (\r\n                <li>\r\n                  <div className=\"preview-wrapper\">\r\n                    <div className=\"day-card\">\r\n                      <div className=\"day-card-group-1\">\r\n                        <div className=\"text-secondary\">{moment.unix(forecast.dt).format(\"dddd.\")}</div>\r\n                        <WeatherIcon\r\n                          status={forecast.weather[0].main}\r\n                          size=\"lg\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"day-card-group-2\">\r\n                        <span>{forecast.temp.max}°</span>\r\n                        <span className=\"text-secondary\">{forecast.temp.min}°</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        );\r\n    }\r\n    else {\r\n      return (<div>Waiting..</div>);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Preview;\r\n"]},"metadata":{},"sourceType":"module"}