{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Documents\\\\GitHub\\\\React\\\\Weather\\\\App\\\\src\\\\Components\\\\Details.jsx\";\nimport React, { Component } from \"react\";\nimport \"../bootstrap.css\";\nimport \"../index.css\";\nimport { Line } from \"react-chartjs-2\";\nimport \"../Details.css\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faCloudSun, faCloud } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport moment from 'moment';\nimport 'moment/locale/de';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlibrary.add(faCloud, faCloudSun);\n\nclass Details extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      componentHasUpdated: false,\n      chartData: {}\n    };\n  }\n\n  getLineChartData(hourlyData) {\n    let filteredData = [];\n    let counter = 0;\n\n    for (let i = 0; i < hourlyData.length - 24; i++) {\n      if (counter === 3) {\n        counter = 0;\n      }\n\n      if (counter === 0) {\n        filteredData.push(hourlyData[i]);\n      }\n\n      counter++;\n    }\n\n    return {\n      datasets: [{\n        label: 'forecast',\n        data: filteredData.map(entity => {\n          return entity.temp;\n        }),\n        backgroundColor: 'rgba(255, 204, 0, 0.2)',\n        borderColor: '#ffbb00',\n        pointStyle: 'line'\n      }],\n      labels: filteredData.map(entity => {\n        return moment(entity.dt).format(\"HH:mm\");\n      }),\n      options: {\n        scale: {\n          xAxes: [{\n            gridLines: {\n              display: false\n            }\n          }],\n          yAxes: [{\n            gridLines: {\n              display: false\n            }\n          }]\n        }\n      }\n    };\n  }\n\n  render() {\n    if (this.props.data !== undefined) {\n      if (this.props.data.weather !== undefined) {\n        const {\n          current\n        } = this.props.data.weather.data;\n        const {\n          hourly\n        } = this.props.data.weather.data;\n        let chartData = this.getLineChartData(hourly);\n        moment.locale('de');\n        console.log(this.props.data);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"inline\",\n                float: \"left\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"info-group-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"info-group-item\",\n                  id: \"main\",\n                  children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    style: {\n                      margin: \"0 0.25em\"\n                    },\n                    icon: \"cloud\",\n                    size: \"sm\",\n                    className: \"cloud\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    id: \"currentTemperature\",\n                    children: Math.round(current.temp)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"info-group-item\",\n                  id: \"config\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"temperatureConfig-item\",\n                    children: \"\\xB0C\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"temperatureConfig-item\",\n                    children: \"|\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"temperatureConfig-item\",\n                    children: \"\\xB0F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"info-group-item\",\n                  id: \"secondary\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-secondary\",\n                    children: \"Niederschlag: 0%\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-secondary\",\n                    children: [\"Luftfeuchte: \", current.humidity, \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-secondary\",\n                    children: [\"Wind: \", current.wind_speed, \" km/h\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"inline\",\n                float: \"right\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"info-group-2\",\n                id: \"third\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Backnang\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"text-secondary\",\n                  children: moment().format(\"dddd HH:mm\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"text-secondary\",\n                  children: current.weather[0].description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Line, {\n              width: 100,\n              height: 100,\n              options: {\n                maintainAspectRatio: false\n              },\n              data: chartData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Waiting for data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Waiting for data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport default Details;","map":{"version":3,"sources":["C:/Users/David/Documents/GitHub/React/Weather/App/src/Components/Details.jsx"],"names":["React","Component","Line","library","faCloudSun","faCloud","FontAwesomeIcon","moment","add","Details","state","componentHasUpdated","chartData","getLineChartData","hourlyData","filteredData","counter","i","length","push","datasets","label","data","map","entity","temp","backgroundColor","borderColor","pointStyle","labels","dt","format","options","scale","xAxes","gridLines","display","yAxes","render","props","undefined","weather","current","hourly","locale","console","log","float","margin","Math","round","humidity","wind_speed","description","maintainAspectRatio"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../bootstrap.css\";\r\nimport \"../index.css\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport \"../Details.css\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faCloudSun, faCloud } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport moment from 'moment';\r\nimport 'moment/locale/de';\r\nlibrary.add(faCloud, faCloudSun);\r\n\r\nclass Details extends Component {\r\n  state = {\r\n    componentHasUpdated: false,\r\n    chartData: {}\r\n  };\r\n  getLineChartData(hourlyData) {\r\n    let filteredData = [];\r\n    let counter = 0;\r\n    for (let i = 0; i < hourlyData.length - 24; i++) {\r\n      if (counter === 3) {\r\n        counter = 0;\r\n      }\r\n      if (counter === 0) {\r\n        filteredData.push(hourlyData[i]);\r\n      }\r\n      counter++;\r\n    }\r\n    return {\r\n        datasets: [{\r\n          label:'forecast',\r\n          data: filteredData.map(entity=>{return entity.temp}),\r\n          backgroundColor:'rgba(255, 204, 0, 0.2)',\r\n          borderColor:'#ffbb00',\r\n          pointStyle:'line',\r\n         \r\n        }],\r\n        labels: filteredData.map(entity=>{return moment(entity.dt).format(\"HH:mm\")}),\r\n        options:{\r\n          scale:{\r\n            xAxes:[{\r\n              gridLines:{\r\n                display:false\r\n              }\r\n            }],\r\n            yAxes:[{\r\n              gridLines:{\r\n                display:false\r\n              }\r\n            }]\r\n            \r\n          }\r\n        }\r\n    }\r\n  }\r\n  render() {\r\n    if (this.props.data !== undefined) {\r\n      if (this.props.data.weather !== undefined) {\r\n        const { current } = this.props.data.weather.data;\r\n        const { hourly } = this.props.data.weather.data;\r\n        let chartData = this.getLineChartData(hourly);\r\n        moment.locale('de');\r\n        console.log(this.props.data);\r\n\r\n        return (\r\n          <div className=\"details-wrapper\">\r\n            <div>\r\n              <div style={{ display: \"inline\", float: \"left\" }}>\r\n                <div className=\"info-group-1\">\r\n                  <div className=\"info-group-item\" id=\"main\">\r\n                    <FontAwesomeIcon\r\n                      style={{ margin: \"0 0.25em\" }}\r\n                      icon=\"cloud\"\r\n                      size=\"sm\"\r\n                      className=\"cloud\"\r\n                    />\r\n                    <span id=\"currentTemperature\">{Math.round(current.temp)}</span>\r\n                  </div>\r\n\r\n                  <div className=\"info-group-item\" id=\"config\">\r\n                    <span className=\"temperatureConfig-item\">°C</span>\r\n                    <span className=\"temperatureConfig-item\">|</span>\r\n                    <span className=\"temperatureConfig-item\">°F</span>\r\n                  </div>\r\n\r\n                  <div className=\"info-group-item\" id=\"secondary\">\r\n                    <span className=\"text-secondary\">Niederschlag: 0%</span>\r\n                    <span className=\"text-secondary\">Luftfeuchte: {current.humidity}%</span>\r\n                    <span className=\"text-secondary\">Wind: {current.wind_speed} km/h</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div style={{ display: \"inline\", float: \"right\" }}>\r\n                <div className=\"info-group-2\" id=\"third\">\r\n                  <h3>Backnang</h3>\r\n                  <h5 className=\"text-secondary\">{moment().format(\"dddd HH:mm\")}</h5>\r\n                  <h5 className=\"text-secondary\">{current.weather[0].description}</h5>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <Line\r\n                width={100}\r\n                height={100}\r\n                options={{ maintainAspectRatio: false }}\r\n                data={chartData}\r\n              />\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      else {\r\n        return (\r\n          <div>Waiting for data</div>\r\n        );\r\n      }\r\n    }\r\n    else {\r\n      return (\r\n        <div>Waiting for data</div>\r\n      );\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default Details;\r\n"]},"metadata":{},"sourceType":"module"}