{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Documents\\\\GitHub\\\\React\\\\Weather\\\\App\\\\src\\\\Components\\\\Wrapper.jsx\";\nimport React, { Component } from \"react\";\nimport \"../bootstrap.css\";\nimport \"../index.css\";\nimport Details from \"./Details\";\nimport Preview from \"./Preview\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Wrapper extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      gotLocationData: false\n    };\n\n    this.getLocation = () => {\n      navigator.geolocation.getCurrentPosition(position => {\n        var {\n          latitude,\n          longitude\n        } = position.coords;\n        this.state.data.location = {\n          latitude,\n          longitude\n        };\n        this.setState({\n          gotLocationData: true\n        });\n      });\n    };\n\n    this.getWeatherData = async () => {\n      if (this.state.gotLocationData == true) {\n        var lat = this.state.data.location.latitude;\n        var lon = this.state.data.location.longitude;\n        const key = process.env.REACT_APP_WeatherApiKey;\n        const link = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&units=metric&lang=de&appid=${key}`;\n        const response = await fetch(link);\n        const data = await response.json();\n        this.state.data.weather = {\n          data\n        };\n        this.setState({\n          gotLocationData: false\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getLocation();\n    setInterval(this.getWeatherData, 500);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container center\",\n      children: [/*#__PURE__*/_jsxDEV(Details, {\n        data: this.state.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Preview, {\n        data: this.state.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Wrapper;","map":{"version":3,"sources":["C:/Users/David/Documents/GitHub/React/Weather/App/src/Components/Wrapper.jsx"],"names":["React","Component","Details","Preview","Wrapper","constructor","props","state","data","gotLocationData","getLocation","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","location","setState","getWeatherData","lat","lon","key","process","env","REACT_APP_WeatherApiKey","link","response","fetch","json","weather","componentDidMount","setInterval","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,kBAAP;AACA,OAAO,cAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AACA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAC9BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAOnBC,KAPmB,GAOX;AACNC,MAAAA,IAAI,EAAC,EADC;AAENC,MAAAA,eAAe,EAAE;AAFX,KAPW;;AAAA,SAmBnBC,WAnBmB,GAmBL,MAAM;AAClBC,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,QAAD,IAAc;AACrD,YAAI;AAAEC,UAAAA,QAAF;AAAYC,UAAAA;AAAZ,YAA0BF,QAAQ,CAACG,MAAvC;AAEA,aAAKV,KAAL,CAAWC,IAAX,CAAgBU,QAAhB,GAA2B;AACzBH,UAAAA,QADyB;AAEzBC,UAAAA;AAFyB,SAA3B;AAIA,aAAKG,QAAL,CAAc;AAAEV,UAAAA,eAAe,EAAE;AAAnB,SAAd;AACD,OARD;AASD,KA7BkB;;AAAA,SA8BnBW,cA9BmB,GA8BF,YAAY;AAC3B,UAAI,KAAKb,KAAL,CAAWE,eAAX,IAA8B,IAAlC,EAAwC;AACtC,YAAIY,GAAG,GAAG,KAAKd,KAAL,CAAWC,IAAX,CAAgBU,QAAhB,CAAyBH,QAAnC;AACA,YAAIO,GAAG,GAAG,KAAKf,KAAL,CAAWC,IAAX,CAAgBU,QAAhB,CAAyBF,SAAnC;AACA,cAAMO,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,uBAAxB;AACA,cAAMC,IAAI,GAAI,uDAAsDN,GAAI,QAAOC,GAAI,+BAA8BC,GAAI,EAArH;AACA,cAAMK,QAAQ,GAAG,MAAMC,KAAK,CAACF,IAAD,CAA5B;AACA,cAAMnB,IAAI,GAAG,MAAMoB,QAAQ,CAACE,IAAT,EAAnB;AACA,aAAKvB,KAAL,CAAWC,IAAX,CAAgBuB,OAAhB,GAA0B;AACxBvB,UAAAA;AADwB,SAA1B;AAGA,aAAKW,QAAL,CAAc;AAAEV,UAAAA,eAAe,EAAE;AAAnB,SAAd;AACD;AACF,KA3CkB;AAElB;;AACDuB,EAAAA,iBAAiB,GAAG;AAClB,SAAKtB,WAAL;AACAuB,IAAAA,WAAW,CAAC,KAAKb,cAAN,EAAsB,GAAtB,CAAX;AACD;;AAKDc,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,IAAI,EAAE,KAAK3B,KAAL,CAAWC;AAA1B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,OAAD;AAAS,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC;AAA1B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAnB6B;;AA+ChC,eAAeJ,OAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../bootstrap.css\";\r\nimport \"../index.css\";\r\nimport Details from \"./Details\";\r\nimport Preview from \"./Preview\";\r\nclass Wrapper extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  componentDidMount() {\r\n    this.getLocation();\r\n    setInterval(this.getWeatherData, 500);\r\n  }\r\n  state = {\r\n    data:{},\r\n    gotLocationData: false,\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container center\">\r\n        <Details data={this.state.data}></Details>\r\n        <Preview data={this.state.data}></Preview>\r\n      </div>\r\n    );\r\n  }\r\n  getLocation = () => {\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      var { latitude, longitude } = position.coords;\r\n\r\n      this.state.data.location = {\r\n        latitude,\r\n        longitude,\r\n      };\r\n      this.setState({ gotLocationData: true });\r\n    });\r\n  };\r\n  getWeatherData = async () => {\r\n    if (this.state.gotLocationData == true) {\r\n      var lat = this.state.data.location.latitude;\r\n      var lon = this.state.data.location.longitude;\r\n      const key = process.env.REACT_APP_WeatherApiKey;\r\n      const link = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&units=metric&lang=de&appid=${key}`;\r\n      const response = await fetch(link);\r\n      const data = await response.json();\r\n      this.state.data.weather = {\r\n        data,\r\n      };\r\n      this.setState({ gotLocationData: false });\r\n    }\r\n  };\r\n}\r\n\r\nexport default Wrapper;\r\n"]},"metadata":{},"sourceType":"module"}